// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cm_group_storages.proto

#include "cm_group_storages.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace dfs {
namespace proto {
namespace cm_group_storages {
PROTOBUF_CONSTEXPR response_t_storage_t::response_t_storage_t(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.ip_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.port_)*/0u
  , /*decltype(_impl_.magic_)*/0u
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct response_t_storage_tDefaultTypeInternal {
  PROTOBUF_CONSTEXPR response_t_storage_tDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~response_t_storage_tDefaultTypeInternal() {}
  union {
    response_t_storage_t _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 response_t_storage_tDefaultTypeInternal _response_t_storage_t_default_instance_;
PROTOBUF_CONSTEXPR response_t::response_t(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.storages_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct response_tDefaultTypeInternal {
  PROTOBUF_CONSTEXPR response_tDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~response_tDefaultTypeInternal() {}
  union {
    response_t _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 response_tDefaultTypeInternal _response_t_default_instance_;
}  // namespace cm_group_storages
}  // namespace proto
}  // namespace dfs
static ::_pb::Metadata file_level_metadata_cm_5fgroup_5fstorages_2eproto[2];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_cm_5fgroup_5fstorages_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_cm_5fgroup_5fstorages_2eproto = nullptr;

const uint32_t TableStruct_cm_5fgroup_5fstorages_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dfs::proto::cm_group_storages::response_t_storage_t, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::dfs::proto::cm_group_storages::response_t_storage_t, _impl_.ip_),
  PROTOBUF_FIELD_OFFSET(::dfs::proto::cm_group_storages::response_t_storage_t, _impl_.port_),
  PROTOBUF_FIELD_OFFSET(::dfs::proto::cm_group_storages::response_t_storage_t, _impl_.magic_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dfs::proto::cm_group_storages::response_t, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::dfs::proto::cm_group_storages::response_t, _impl_.storages_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::dfs::proto::cm_group_storages::response_t_storage_t)},
  { 9, -1, -1, sizeof(::dfs::proto::cm_group_storages::response_t)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::dfs::proto::cm_group_storages::_response_t_storage_t_default_instance_._instance,
  &::dfs::proto::cm_group_storages::_response_t_default_instance_._instance,
};

const char descriptor_table_protodef_cm_5fgroup_5fstorages_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\027cm_group_storages.proto\022\033dfs.proto.cm_"
  "group_storages\"\207\001\n\nresponse_t\022C\n\010storage"
  "s\030\001 \003(\01321.dfs.proto.cm_group_storages.re"
  "sponse_t.storage_t\0324\n\tstorage_t\022\n\n\002ip\030\001 "
  "\001(\t\022\014\n\004port\030\002 \001(\r\022\r\n\005magic\030\003 \001(\rb\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_cm_5fgroup_5fstorages_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_cm_5fgroup_5fstorages_2eproto = {
    false, false, 200, descriptor_table_protodef_cm_5fgroup_5fstorages_2eproto,
    "cm_group_storages.proto",
    &descriptor_table_cm_5fgroup_5fstorages_2eproto_once, nullptr, 0, 2,
    schemas, file_default_instances, TableStruct_cm_5fgroup_5fstorages_2eproto::offsets,
    file_level_metadata_cm_5fgroup_5fstorages_2eproto, file_level_enum_descriptors_cm_5fgroup_5fstorages_2eproto,
    file_level_service_descriptors_cm_5fgroup_5fstorages_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_cm_5fgroup_5fstorages_2eproto_getter() {
  return &descriptor_table_cm_5fgroup_5fstorages_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_cm_5fgroup_5fstorages_2eproto(&descriptor_table_cm_5fgroup_5fstorages_2eproto);
namespace dfs {
namespace proto {
namespace cm_group_storages {

// ===================================================================

class response_t_storage_t::_Internal {
 public:
};

response_t_storage_t::response_t_storage_t(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:dfs.proto.cm_group_storages.response_t.storage_t)
}
response_t_storage_t::response_t_storage_t(const response_t_storage_t& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  response_t_storage_t* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.ip_){}
    , decltype(_impl_.port_){}
    , decltype(_impl_.magic_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.ip_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.ip_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_ip().empty()) {
    _this->_impl_.ip_.Set(from._internal_ip(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.port_, &from._impl_.port_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.magic_) -
    reinterpret_cast<char*>(&_impl_.port_)) + sizeof(_impl_.magic_));
  // @@protoc_insertion_point(copy_constructor:dfs.proto.cm_group_storages.response_t.storage_t)
}

inline void response_t_storage_t::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.ip_){}
    , decltype(_impl_.port_){0u}
    , decltype(_impl_.magic_){0u}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.ip_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.ip_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

response_t_storage_t::~response_t_storage_t() {
  // @@protoc_insertion_point(destructor:dfs.proto.cm_group_storages.response_t.storage_t)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void response_t_storage_t::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.ip_.Destroy();
}

void response_t_storage_t::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void response_t_storage_t::Clear() {
// @@protoc_insertion_point(message_clear_start:dfs.proto.cm_group_storages.response_t.storage_t)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.ip_.ClearToEmpty();
  ::memset(&_impl_.port_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.magic_) -
      reinterpret_cast<char*>(&_impl_.port_)) + sizeof(_impl_.magic_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* response_t_storage_t::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string ip = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_ip();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "dfs.proto.cm_group_storages.response_t.storage_t.ip"));
        } else
          goto handle_unusual;
        continue;
      // uint32 port = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.port_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 magic = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.magic_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* response_t_storage_t::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dfs.proto.cm_group_storages.response_t.storage_t)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string ip = 1;
  if (!this->_internal_ip().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_ip().data(), static_cast<int>(this->_internal_ip().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dfs.proto.cm_group_storages.response_t.storage_t.ip");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_ip(), target);
  }

  // uint32 port = 2;
  if (this->_internal_port() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_port(), target);
  }

  // uint32 magic = 3;
  if (this->_internal_magic() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(3, this->_internal_magic(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dfs.proto.cm_group_storages.response_t.storage_t)
  return target;
}

size_t response_t_storage_t::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dfs.proto.cm_group_storages.response_t.storage_t)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string ip = 1;
  if (!this->_internal_ip().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_ip());
  }

  // uint32 port = 2;
  if (this->_internal_port() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_port());
  }

  // uint32 magic = 3;
  if (this->_internal_magic() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_magic());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData response_t_storage_t::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    response_t_storage_t::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*response_t_storage_t::GetClassData() const { return &_class_data_; }


void response_t_storage_t::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<response_t_storage_t*>(&to_msg);
  auto& from = static_cast<const response_t_storage_t&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:dfs.proto.cm_group_storages.response_t.storage_t)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_ip().empty()) {
    _this->_internal_set_ip(from._internal_ip());
  }
  if (from._internal_port() != 0) {
    _this->_internal_set_port(from._internal_port());
  }
  if (from._internal_magic() != 0) {
    _this->_internal_set_magic(from._internal_magic());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void response_t_storage_t::CopyFrom(const response_t_storage_t& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dfs.proto.cm_group_storages.response_t.storage_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool response_t_storage_t::IsInitialized() const {
  return true;
}

void response_t_storage_t::InternalSwap(response_t_storage_t* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.ip_, lhs_arena,
      &other->_impl_.ip_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(response_t_storage_t, _impl_.magic_)
      + sizeof(response_t_storage_t::_impl_.magic_)
      - PROTOBUF_FIELD_OFFSET(response_t_storage_t, _impl_.port_)>(
          reinterpret_cast<char*>(&_impl_.port_),
          reinterpret_cast<char*>(&other->_impl_.port_));
}

::PROTOBUF_NAMESPACE_ID::Metadata response_t_storage_t::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cm_5fgroup_5fstorages_2eproto_getter, &descriptor_table_cm_5fgroup_5fstorages_2eproto_once,
      file_level_metadata_cm_5fgroup_5fstorages_2eproto[0]);
}

// ===================================================================

class response_t::_Internal {
 public:
};

response_t::response_t(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:dfs.proto.cm_group_storages.response_t)
}
response_t::response_t(const response_t& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  response_t* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.storages_){from._impl_.storages_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:dfs.proto.cm_group_storages.response_t)
}

inline void response_t::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.storages_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

response_t::~response_t() {
  // @@protoc_insertion_point(destructor:dfs.proto.cm_group_storages.response_t)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void response_t::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.storages_.~RepeatedPtrField();
}

void response_t::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void response_t::Clear() {
// @@protoc_insertion_point(message_clear_start:dfs.proto.cm_group_storages.response_t)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.storages_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* response_t::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .dfs.proto.cm_group_storages.response_t.storage_t storages = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_storages(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* response_t::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dfs.proto.cm_group_storages.response_t)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .dfs.proto.cm_group_storages.response_t.storage_t storages = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_storages_size()); i < n; i++) {
    const auto& repfield = this->_internal_storages(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dfs.proto.cm_group_storages.response_t)
  return target;
}

size_t response_t::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dfs.proto.cm_group_storages.response_t)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .dfs.proto.cm_group_storages.response_t.storage_t storages = 1;
  total_size += 1UL * this->_internal_storages_size();
  for (const auto& msg : this->_impl_.storages_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData response_t::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    response_t::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*response_t::GetClassData() const { return &_class_data_; }


void response_t::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<response_t*>(&to_msg);
  auto& from = static_cast<const response_t&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:dfs.proto.cm_group_storages.response_t)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.storages_.MergeFrom(from._impl_.storages_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void response_t::CopyFrom(const response_t& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dfs.proto.cm_group_storages.response_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool response_t::IsInitialized() const {
  return true;
}

void response_t::InternalSwap(response_t* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.storages_.InternalSwap(&other->_impl_.storages_);
}

::PROTOBUF_NAMESPACE_ID::Metadata response_t::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cm_5fgroup_5fstorages_2eproto_getter, &descriptor_table_cm_5fgroup_5fstorages_2eproto_once,
      file_level_metadata_cm_5fgroup_5fstorages_2eproto[1]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace cm_group_storages
}  // namespace proto
}  // namespace dfs
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::dfs::proto::cm_group_storages::response_t_storage_t*
Arena::CreateMaybeMessage< ::dfs::proto::cm_group_storages::response_t_storage_t >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dfs::proto::cm_group_storages::response_t_storage_t >(arena);
}
template<> PROTOBUF_NOINLINE ::dfs::proto::cm_group_storages::response_t*
Arena::CreateMaybeMessage< ::dfs::proto::cm_group_storages::response_t >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dfs::proto::cm_group_storages::response_t >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
