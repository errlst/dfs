// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cm_valid_storage.proto

#include "cm_valid_storage.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace dfs {
namespace proto {
namespace cm_valid_storage {
PROTOBUF_CONSTEXPR response_t::response_t(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.storage_ip_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.storage_magic_)*/0u
  , /*decltype(_impl_.storage_port_)*/0u
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct response_tDefaultTypeInternal {
  PROTOBUF_CONSTEXPR response_tDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~response_tDefaultTypeInternal() {}
  union {
    response_t _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 response_tDefaultTypeInternal _response_t_default_instance_;
}  // namespace cm_valid_storage
}  // namespace proto
}  // namespace dfs
static ::_pb::Metadata file_level_metadata_cm_5fvalid_5fstorage_2eproto[1];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_cm_5fvalid_5fstorage_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_cm_5fvalid_5fstorage_2eproto = nullptr;

const uint32_t TableStruct_cm_5fvalid_5fstorage_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::dfs::proto::cm_valid_storage::response_t, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::dfs::proto::cm_valid_storage::response_t, _impl_.storage_magic_),
  PROTOBUF_FIELD_OFFSET(::dfs::proto::cm_valid_storage::response_t, _impl_.storage_port_),
  PROTOBUF_FIELD_OFFSET(::dfs::proto::cm_valid_storage::response_t, _impl_.storage_ip_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::dfs::proto::cm_valid_storage::response_t)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::dfs::proto::cm_valid_storage::_response_t_default_instance_._instance,
};

const char descriptor_table_protodef_cm_5fvalid_5fstorage_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\026cm_valid_storage.proto\022\032dfs.proto.cm_v"
  "alid_storage\"M\n\nresponse_t\022\025\n\rstorage_ma"
  "gic\030\001 \001(\r\022\024\n\014storage_port\030\002 \001(\r\022\022\n\nstora"
  "ge_ip\030\003 \001(\tb\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_cm_5fvalid_5fstorage_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_cm_5fvalid_5fstorage_2eproto = {
    false, false, 139, descriptor_table_protodef_cm_5fvalid_5fstorage_2eproto,
    "cm_valid_storage.proto",
    &descriptor_table_cm_5fvalid_5fstorage_2eproto_once, nullptr, 0, 1,
    schemas, file_default_instances, TableStruct_cm_5fvalid_5fstorage_2eproto::offsets,
    file_level_metadata_cm_5fvalid_5fstorage_2eproto, file_level_enum_descriptors_cm_5fvalid_5fstorage_2eproto,
    file_level_service_descriptors_cm_5fvalid_5fstorage_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_cm_5fvalid_5fstorage_2eproto_getter() {
  return &descriptor_table_cm_5fvalid_5fstorage_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_cm_5fvalid_5fstorage_2eproto(&descriptor_table_cm_5fvalid_5fstorage_2eproto);
namespace dfs {
namespace proto {
namespace cm_valid_storage {

// ===================================================================

class response_t::_Internal {
 public:
};

response_t::response_t(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:dfs.proto.cm_valid_storage.response_t)
}
response_t::response_t(const response_t& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  response_t* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.storage_ip_){}
    , decltype(_impl_.storage_magic_){}
    , decltype(_impl_.storage_port_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.storage_ip_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.storage_ip_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_storage_ip().empty()) {
    _this->_impl_.storage_ip_.Set(from._internal_storage_ip(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.storage_magic_, &from._impl_.storage_magic_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.storage_port_) -
    reinterpret_cast<char*>(&_impl_.storage_magic_)) + sizeof(_impl_.storage_port_));
  // @@protoc_insertion_point(copy_constructor:dfs.proto.cm_valid_storage.response_t)
}

inline void response_t::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.storage_ip_){}
    , decltype(_impl_.storage_magic_){0u}
    , decltype(_impl_.storage_port_){0u}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.storage_ip_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.storage_ip_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

response_t::~response_t() {
  // @@protoc_insertion_point(destructor:dfs.proto.cm_valid_storage.response_t)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void response_t::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.storage_ip_.Destroy();
}

void response_t::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void response_t::Clear() {
// @@protoc_insertion_point(message_clear_start:dfs.proto.cm_valid_storage.response_t)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.storage_ip_.ClearToEmpty();
  ::memset(&_impl_.storage_magic_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.storage_port_) -
      reinterpret_cast<char*>(&_impl_.storage_magic_)) + sizeof(_impl_.storage_port_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* response_t::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // uint32 storage_magic = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.storage_magic_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // uint32 storage_port = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.storage_port_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string storage_ip = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_storage_ip();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "dfs.proto.cm_valid_storage.response_t.storage_ip"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* response_t::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:dfs.proto.cm_valid_storage.response_t)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 storage_magic = 1;
  if (this->_internal_storage_magic() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(1, this->_internal_storage_magic(), target);
  }

  // uint32 storage_port = 2;
  if (this->_internal_storage_port() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteUInt32ToArray(2, this->_internal_storage_port(), target);
  }

  // string storage_ip = 3;
  if (!this->_internal_storage_ip().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_storage_ip().data(), static_cast<int>(this->_internal_storage_ip().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "dfs.proto.cm_valid_storage.response_t.storage_ip");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_storage_ip(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:dfs.proto.cm_valid_storage.response_t)
  return target;
}

size_t response_t::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:dfs.proto.cm_valid_storage.response_t)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string storage_ip = 3;
  if (!this->_internal_storage_ip().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_storage_ip());
  }

  // uint32 storage_magic = 1;
  if (this->_internal_storage_magic() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_storage_magic());
  }

  // uint32 storage_port = 2;
  if (this->_internal_storage_port() != 0) {
    total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(this->_internal_storage_port());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData response_t::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    response_t::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*response_t::GetClassData() const { return &_class_data_; }


void response_t::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<response_t*>(&to_msg);
  auto& from = static_cast<const response_t&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:dfs.proto.cm_valid_storage.response_t)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_storage_ip().empty()) {
    _this->_internal_set_storage_ip(from._internal_storage_ip());
  }
  if (from._internal_storage_magic() != 0) {
    _this->_internal_set_storage_magic(from._internal_storage_magic());
  }
  if (from._internal_storage_port() != 0) {
    _this->_internal_set_storage_port(from._internal_storage_port());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void response_t::CopyFrom(const response_t& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:dfs.proto.cm_valid_storage.response_t)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool response_t::IsInitialized() const {
  return true;
}

void response_t::InternalSwap(response_t* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.storage_ip_, lhs_arena,
      &other->_impl_.storage_ip_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(response_t, _impl_.storage_port_)
      + sizeof(response_t::_impl_.storage_port_)
      - PROTOBUF_FIELD_OFFSET(response_t, _impl_.storage_magic_)>(
          reinterpret_cast<char*>(&_impl_.storage_magic_),
          reinterpret_cast<char*>(&other->_impl_.storage_magic_));
}

::PROTOBUF_NAMESPACE_ID::Metadata response_t::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_cm_5fvalid_5fstorage_2eproto_getter, &descriptor_table_cm_5fvalid_5fstorage_2eproto_once,
      file_level_metadata_cm_5fvalid_5fstorage_2eproto[0]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace cm_valid_storage
}  // namespace proto
}  // namespace dfs
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::dfs::proto::cm_valid_storage::response_t*
Arena::CreateMaybeMessage< ::dfs::proto::cm_valid_storage::response_t >(Arena* arena) {
  return Arena::CreateMessageInternal< ::dfs::proto::cm_valid_storage::response_t >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
